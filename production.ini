[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

[app:databrowser]
use = egg:databrowser
reload_templates = false
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = false
default_locale_name = en
jinja2.directories = databrowser:templates
jinja2.i18n.domain = databrowser
pyramid.includes =
    pyramid_jinja2
    velruse.providers.google_oauth2
    velruse.providers.live
    pyramid_redis_sessions
velruse.google_oauth2.scope = email

[composite:main]
use = egg:Paste#urlmap

# This section describes the application baseurls that the databrowser should serve. If there is a proxyserver in
# front of the databrowser, the urls that the proxyserver uses and the urls that the databrowser serves must be
# the same.
# Example: below is an excerp from an apache configuration file.
# In the first <Location> the apache server will redirect traffic from "/databrowser/" to "http://127.0.0.1:6543/databrowser/"
# In the second <Location> the apache server will redirect traffic from "/databrowser_no_login/" to "http://127.0.0.1:6543/databrowser_no_login/"
#
#        <Location "/databrowser/">
#          AuthType NTLM
#          AuthName BOUVET.NO
#          Require valid-user
#
#          PythonAuthenHandler pyntlm
#          PythonOption Domain Bouvet
#          PythonOption PDC dc1.bouvet.no
#          PythonOption BDC dc2.bouvet.no
#          PythonOption NameFmt LogOn
#
#          RewriteEngine On
#          RewriteCond %{LA-U:REMOTE_USER} (.+)
#          RewriteRule . - [E=RU:%1,NS]
#          RequestHeader set X-Remote-User "%{RU}e" env=RU
#          RequestHeader set X-Forwarded-Proto https
#
#          ProxyPreserveHost On
#          ProxyPass http://127.0.0.1:6543/databrowser/
#          ProxyPassReverse http://127.0.0.1:6543/databrowser/
#        </Location>
#
#        <Location "/databrowser_no_login/">
#          RequestHeader set X-Forwarded-Proto https
#
#          ProxyPreserveHost On
#          ProxyPass http://127.0.0.1:6543/databrowser_no_login/
#          ProxyPassReverse http://127.0.0.1:6543/databrowser_no_login/
#        </Location>
#
# The databrowser needs to define that the same urls should be served by the "databrower" application, like
# this:
/databrowser/ = databrowser
# /databrowser_no_login/ = databrowser

# The default case is to have the databrowser running on the root url, like this:
/ = databrowser

# Begin logging configuration

[loggers]
keys = root, databrowser

[handlers]
# Note: we add a RotatingFileLogger in __init__.py (we need to access the SESAM_LOGS environment variable)
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_databrowser]
level = INFO
handlers =
qualname = databrowser

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration

